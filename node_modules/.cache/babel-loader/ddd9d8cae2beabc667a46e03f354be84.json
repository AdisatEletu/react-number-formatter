{"ast":null,"code":"var _jsxFileName = \"/Users/softcom/Documents/number-formatter/src/numberFormatter.js\";\nimport React from \"react\";\n/**\n * A function that takes in a value and format it\n * like the social media followers counter; e.g\n * if you pass in a number above 999 it converts it to 1k\n */\n\nconst NumberFormatter = ({\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"numberFormatter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, value > 999 && value < 999999 ? (value / 1000).toFixed(1) + \"K\" : value > 999999 ? (value / 1000000).toFixed(1) + \"M\" : value);\n};\n\nexport default NumberFormatter;","map":{"version":3,"sources":["/Users/softcom/Documents/number-formatter/src/numberFormatter.js"],"names":["React","NumberFormatter","value","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;;;;;;AAMA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACnC,sBACE;AAAK,mBAAa,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,MAAvB,GAAgC,CAACA,KAAK,GAAG,IAAT,EAAeC,OAAf,CAAuB,CAAvB,IAA4B,GAA5D,GAAkED,KAAK,GAAG,MAAR,GAAiB,CAACA,KAAK,GAAG,OAAT,EAAkBC,OAAlB,CAA0B,CAA1B,IAA+B,GAAhD,GAAsDD,KAD3H,CADF;AAKD,CAND;;AAOA,eAAeD,eAAf","sourcesContent":["import React from \"react\";\n\n\n/**\n * A function that takes in a value and format it\n * like the social media followers counter; e.g\n * if you pass in a number above 999 it converts it to 1k\n */\n\nconst NumberFormatter = ({value}) => {\n  return (\n    <div data-testid={\"numberFormatter\"}>\n      {value > 999 && value < 999999 ? (value / 1000).toFixed(1) + \"K\" : value > 999999 ? (value / 1000000).toFixed(1) + \"M\" : value}\n    </div>\n  )\n};\nexport default NumberFormatter;\n"]},"metadata":{},"sourceType":"module"}